{% if product %}
  {% else %}
    <div class="flex flex-col justify-center items-center">
      <h2>Product Recommendations Error:</h2>
      <h2>No product found in context, please select one from the section options</h2>
    </div>
{% endif %}
<div class="product-recommendations" data-url="{{ routes.product_recommendations_url }}?section_id={{ section.id }}&product_id={{ product.id }}&limit=4&intent=related">
  {%- if recommendations.performed? and recommendations.products_count > 0 -%}
    {% if recommendations.intent == 'related' %}
      <h2>You may also like</h2>
    {% elsif recommendations.intent == 'complementary' %}
      <h2>Pair it with</h2>
    {% endif %}

    {% assign wishlist_array = customer.metafields.custom.wishlist | split: "," %}
    <div class="flex flex-wrap gap-[16px]">
      {%- for product in recommendations.products -%}
        <div class="w-[316px]">
          {% include 'product_card' with product, wishlist_array %}
        </div>
      {%- endfor -%}
    </div>
  {%- endif -%}
</div>

<script>


  const productRecommendationsSection = document.querySelector('.product-recommendations');
  const url = productRecommendationsSection.dataset.url;

  fetch(url).then(response => response.text()).then(text => {
    const html = document.createElement('div');
    html.innerHTML = text;
    const recommendations = html.querySelector('.product-recommendations');

    if (recommendations && recommendations.innerHTML.trim().length) {
      productRecommendationsSection.innerHTML = recommendations.innerHTML;
    }
  }).catch(e => {
    console.error(e);
  });
</script>
{% comment %}
<script>
const handleIntersection = (entries, observer) => {
if (!entries[0].isIntersecting) 
return;




observer.unobserve(productRecommendationsSection);

const url = productRecommendationsSection.dataset.url;

fetch(url).then(response => response.text()).then(text => {
const html = document.createElement('div');
html.innerHTML = text;
const recommendations = html.querySelector('.product-recommendations');

if (recommendations && recommendations.innerHTML.trim().length) {
productRecommendationsSection.innerHTML = recommendations.innerHTML;
}
}).catch(e => {
console.error(e);
});
};

const productRecommendationsSection = document.querySelector('.product-recommendations');
const observer = new IntersectionObserver(handleIntersection, {rootMargin: '0px 0px 200px 0px'});

observer.observe(productRecommendationsSection);
</script>
{% endcomment %}